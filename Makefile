# Auto-generated by init.py
CLANG ?= clang++

all: UtilTests StackTraceTests ExceptionTests RefTests GeneratorTests StringTests JSONTests

UtilTests: build/UtilTest build/UtilTest.asan build/UtilTest.ubsan build/UtilTest.tsan
	build/UtilTest && ASAN_OPTIONS=detect_leaks=0 build/UtilTest.asan && build/UtilTest.ubsan && build/UtilTest.tsan

build/UtilTest: test/UtilTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/UtilTest test/UtilTests.cc

all_headers: src/cxx/StackTrace.h src/cxx/JSON.h src/cxx/Util.h src/cxx/Exception.h src/cxx/Ref.h src/cxx/Generator.h src/cxx/String.h

builddir:
	mkdir -p build

build/UtilTest.asan: test/UtilTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/UtilTest.asan test/UtilTests.cc

build/UtilTest.ubsan: test/UtilTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/UtilTest.ubsan test/UtilTests.cc

build/UtilTest.tsan: test/UtilTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/UtilTest.tsan test/UtilTests.cc

StackTraceTests: build/StackTraceTest build/StackTraceTest.asan build/StackTraceTest.ubsan build/StackTraceTest.tsan
	build/StackTraceTest && ASAN_OPTIONS=detect_leaks=0 build/StackTraceTest.asan && build/StackTraceTest.ubsan && build/StackTraceTest.tsan

build/StackTraceTest: test/StackTraceTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/StackTraceTest test/StackTraceTests.cc

build/StackTraceTest.asan: test/StackTraceTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/StackTraceTest.asan test/StackTraceTests.cc

build/StackTraceTest.ubsan: test/StackTraceTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/StackTraceTest.ubsan test/StackTraceTests.cc

build/StackTraceTest.tsan: test/StackTraceTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/StackTraceTest.tsan test/StackTraceTests.cc

ExceptionTests: build/ExceptionTest build/ExceptionTest.asan build/ExceptionTest.ubsan build/ExceptionTest.tsan
	build/ExceptionTest && ASAN_OPTIONS=detect_leaks=0 build/ExceptionTest.asan && build/ExceptionTest.ubsan && build/ExceptionTest.tsan

build/ExceptionTest: test/ExceptionTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/ExceptionTest test/ExceptionTests.cc

build/ExceptionTest.asan: test/ExceptionTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/ExceptionTest.asan test/ExceptionTests.cc

build/ExceptionTest.ubsan: test/ExceptionTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/ExceptionTest.ubsan test/ExceptionTests.cc

build/ExceptionTest.tsan: test/ExceptionTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/ExceptionTest.tsan test/ExceptionTests.cc

RefTests: build/RefTest build/RefTest.asan build/RefTest.ubsan build/RefTest.tsan
	build/RefTest && ASAN_OPTIONS=detect_leaks=0 build/RefTest.asan && build/RefTest.ubsan && build/RefTest.tsan

build/RefTest: test/RefTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/RefTest test/RefTests.cc

build/RefTest.asan: test/RefTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/RefTest.asan test/RefTests.cc

build/RefTest.ubsan: test/RefTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/RefTest.ubsan test/RefTests.cc

build/RefTest.tsan: test/RefTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/RefTest.tsan test/RefTests.cc

GeneratorTests: build/GeneratorTest build/GeneratorTest.asan build/GeneratorTest.ubsan build/GeneratorTest.tsan
	build/GeneratorTest && ASAN_OPTIONS=detect_leaks=0 build/GeneratorTest.asan && build/GeneratorTest.ubsan && build/GeneratorTest.tsan

build/GeneratorTest: test/GeneratorTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/GeneratorTest test/GeneratorTests.cc

build/GeneratorTest.asan: test/GeneratorTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/GeneratorTest.asan test/GeneratorTests.cc

build/GeneratorTest.ubsan: test/GeneratorTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/GeneratorTest.ubsan test/GeneratorTests.cc

build/GeneratorTest.tsan: test/GeneratorTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/GeneratorTest.tsan test/GeneratorTests.cc

StringTests: build/StringTest build/StringTest.asan build/StringTest.ubsan build/StringTest.tsan
	build/StringTest && ASAN_OPTIONS=detect_leaks=0 build/StringTest.asan && build/StringTest.ubsan && build/StringTest.tsan

build/StringTest: test/StringTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/StringTest test/StringTests.cc

build/StringTest.asan: test/StringTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/StringTest.asan test/StringTests.cc

build/StringTest.ubsan: test/StringTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/StringTest.ubsan test/StringTests.cc

build/StringTest.tsan: test/StringTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/StringTest.tsan test/StringTests.cc

JSONTests: build/JSONTest build/JSONTest.asan build/JSONTest.ubsan build/JSONTest.tsan
	build/JSONTest && ASAN_OPTIONS=detect_leaks=0 build/JSONTest.asan && build/JSONTest.ubsan && build/JSONTest.tsan

build/JSONTest: test/JSONTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt -o build/JSONTest test/JSONTests.cc

build/JSONTest.asan: test/JSONTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/JSONTest.asan test/JSONTests.cc

build/JSONTest.ubsan: test/JSONTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=undefined -o build/JSONTest.ubsan test/JSONTests.cc

build/JSONTest.tsan: test/JSONTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=thread -o build/JSONTest.tsan test/JSONTests.cc

clean:
	rm -rf build/

msan: build/UtilTest.msan build/StackTraceTest.msan build/ExceptionTest.msan build/RefTest.msan build/GeneratorTest.msan build/StringTest.msan build/JSONTest.msan
	true && build/UtilTest.msan && build/StackTraceTest.msan && build/ExceptionTest.msan && build/RefTest.msan && build/GeneratorTest.msan && build/StringTest.msan && build/JSONTest.msan

build/UtilTest.msan: test/UtilTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/UtilTest.msan test/UtilTests.cc

build/StackTraceTest.msan: test/StackTraceTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/StackTraceTest.msan test/StackTraceTests.cc

build/ExceptionTest.msan: test/ExceptionTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/ExceptionTest.msan test/ExceptionTests.cc

build/RefTest.msan: test/RefTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/RefTest.msan test/RefTests.cc

build/GeneratorTest.msan: test/GeneratorTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/GeneratorTest.msan test/GeneratorTests.cc

build/StringTest.msan: test/StringTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/StringTest.msan test/StringTests.cc

build/JSONTest.msan: test/JSONTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=memory -o build/JSONTest.msan test/JSONTests.cc

lsan: build/UtilTest.lsan build/StackTraceTest.lsan build/ExceptionTest.lsan build/RefTest.lsan build/GeneratorTest.lsan build/StringTest.lsan build/JSONTest.lsan
	true && ASAN_OPTIONS=detect_leaks=1 build/UtilTest.lsan && ASAN_OPTIONS=detect_leaks=1 build/StackTraceTest.lsan && ASAN_OPTIONS=detect_leaks=1 build/ExceptionTest.lsan && ASAN_OPTIONS=detect_leaks=1 build/RefTest.lsan && ASAN_OPTIONS=detect_leaks=1 build/GeneratorTest.lsan && ASAN_OPTIONS=detect_leaks=1 build/StringTest.lsan && ASAN_OPTIONS=detect_leaks=1 build/JSONTest.lsan

build/UtilTest.lsan: test/UtilTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/UtilTest.lsan test/UtilTests.cc

build/StackTraceTest.lsan: test/StackTraceTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/StackTraceTest.lsan test/StackTraceTests.cc

build/ExceptionTest.lsan: test/ExceptionTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/ExceptionTest.lsan test/ExceptionTests.cc

build/RefTest.lsan: test/RefTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/RefTest.lsan test/RefTests.cc

build/GeneratorTest.lsan: test/GeneratorTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/GeneratorTest.lsan test/GeneratorTests.cc

build/StringTest.lsan: test/StringTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/StringTest.lsan test/StringTests.cc

build/JSONTest.lsan: test/JSONTests.cc all_headers builddir
	$(CLANG) @compile_flags.txt @debugging_flags.txt -fsanitize=address -o build/JSONTest.lsan test/JSONTests.cc

